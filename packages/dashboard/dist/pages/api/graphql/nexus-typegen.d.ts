/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */
declare global {
    interface NexusGen extends NexusGenTypes {
    }
}
export interface NexusGenInputs {
}
export interface NexusGenEnums {
}
export interface NexusGenScalars {
    String: string;
    Int: number;
    Float: number;
    Boolean: boolean;
    ID: string;
}
export interface NexusGenRootTypes {
    Page: {
        id: string;
        siteId: string;
        url: string;
    };
    Query: {};
    Screenshot: {
        id: string;
        image: string;
        pageId: string;
    };
    Site: {
        id: string;
        name: string;
    };
    User: {
        email: string;
        id: string;
    };
}
export interface NexusGenAllTypes extends NexusGenRootTypes {
    String: NexusGenScalars['String'];
    Int: NexusGenScalars['Int'];
    Float: NexusGenScalars['Float'];
    Boolean: NexusGenScalars['Boolean'];
    ID: NexusGenScalars['ID'];
}
export interface NexusGenFieldTypes {
    Page: {
        id: string;
        screenshots: NexusGenRootTypes['Screenshot'] | null;
        site: NexusGenRootTypes['Site'];
        siteId: string;
        url: string;
    };
    Query: {
        site: NexusGenRootTypes['Site'];
    };
    Screenshot: {
        id: string;
        image: string;
        page: NexusGenRootTypes['Page'];
        pageId: string;
    };
    Site: {
        id: string;
        name: string;
        pages: NexusGenRootTypes['Page'] | null;
    };
    User: {
        email: string;
        id: string;
    };
}
export interface NexusGenArgTypes {
    Query: {
        site: {
            postId: string;
        };
    };
}
export interface NexusGenAbstractResolveReturnTypes {
}
export interface NexusGenInheritedFields {
}
export declare type NexusGenObjectNames = "Page" | "Query" | "Screenshot" | "Site" | "User";
export declare type NexusGenInputNames = never;
export declare type NexusGenEnumNames = never;
export declare type NexusGenInterfaceNames = never;
export declare type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";
export declare type NexusGenUnionNames = never;
export interface NexusGenTypes {
    context: any;
    inputTypes: NexusGenInputs;
    rootTypes: NexusGenRootTypes;
    argTypes: NexusGenArgTypes;
    fieldTypes: NexusGenFieldTypes;
    allTypes: NexusGenAllTypes;
    inheritedFields: NexusGenInheritedFields;
    objectNames: NexusGenObjectNames;
    inputNames: NexusGenInputNames;
    enumNames: NexusGenEnumNames;
    interfaceNames: NexusGenInterfaceNames;
    scalarNames: NexusGenScalarNames;
    unionNames: NexusGenUnionNames;
    allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
    allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
    allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes'];
    abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
    abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}
declare global {
    interface NexusGenPluginTypeConfig<TypeName extends string> {
    }
    interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    }
    interface NexusGenPluginSchemaConfig {
    }
}
