{"version":3,"file":"index.js","sources":["../src/lib/fetcher.ts","../src/lib/send-data-to-db.ts","../src/lib/launch-playwright.ts","../src/index.ts"],"sourcesContent":["import fetch from \"node-fetch\";\n\nconst fetcher = async (url: string, method: string = \"GET\", body?: any) => {\n  const params = {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  };\n\n  const apiEndpoint =\n    process.env.NODE_ENV !== \"development\"\n      ? `https://git-flash-dashboard.vercel.app/${url}`\n      : `${process.env.API_URL}/${url}`;\n\n  console.log(\"========== URL ==========\");\n  console.log(apiEndpoint);\n  console.log(\"========== /URL ==========\");\n\n  const response = await fetch(apiEndpoint, params);\n\n  return response.json();\n};\n\nexport default fetcher;\n","import fetcher from \"lib/fetcher\";\n\nconst sendDataToDB = async (\n  image: any,\n  page: { id: string; url: string },\n  browser: string\n) => {\n  console.log(`========== Sending data to DB for ${browser} ==========`);\n\n  const response = await fetcher(\"api/screenshots\", \"POST\", {\n    image,\n    page: {\n      id: page.id,\n    },\n  });\n\n  console.log(`========== Response from DB ==========`);\n  console.log(response);\n  console.log(`========== /Response from DB ==========`);\n\n  console.log(`========== /Sending data to DB for ${browser} ==========`);\n};\n\nexport default sendDataToDB;\n","import sendDataToDB from \"lib/send-data-to-db\";\n\nconst playwright = require(\"playwright\");\n\nconst launchPlaywright = async (\n  browserType: string,\n  args: string[],\n  page: { id: string; url: string }\n) => {\n  console.log(`========== Running Playwright for ${browserType} ==========`);\n\n  const browser = await playwright[browserType].launch({ args });\n  const browserPage = await browser.newPage();\n\n  await browserPage.goto(page.url);\n\n  const buffer = await browserPage.screenshot();\n  const image = buffer.toString(\"base64\");\n\n  await sendDataToDB(image, page, browserType);\n\n  await browser.close();\n\n  console.log(`========== /Running Playwright for ${browserType} ==========`);\n};\n\nexport default launchPlaywright;\n","require(\"dotenv\").config();\n\nimport fetcher from \"lib/fetcher\";\nimport launchPlaywright from \"lib/launch-playwright\";\nimport ISite from \"types/site\";\n\nconst init = async (siteId: string) => {\n  console.log(\"========== Init ==========\");\n\n  try {\n    const site: ISite = await fetcher(`api/site/${siteId}`);\n\n    console.log(\"========== Site details ==========\");\n    console.log(site);\n    console.log(\"========== /Site details ==========\");\n\n    site.pages?.map(async (page: { id: string; url: string }) => {\n      await launchPlaywright(\"webkit\", [], page);\n      await launchPlaywright(\"firefox\", [], page);\n      await launchPlaywright(\"chromium\", [], page);\n\n      process.exit(0);\n    });\n  } catch (error) {\n    console.error(error);\n\n    process.exit(1);\n  }\n};\n\ninit(\"009f38b4-202a-4db4-a225-75f3b0eb7e13\");\n"],"names":["fetcher","url","method","body","params","headers","JSON","stringify","apiEndpoint","process","env","NODE_ENV","API_URL","console","log","fetch","response","json","sendDataToDB","image","page","browser","id","playwright","require","launchPlaywright","browserType","args","launch","newPage","browserPage","goto","screenshot","buffer","toString","close","config","init","siteId","site","pages","map","exit","error"],"mappings":"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"}