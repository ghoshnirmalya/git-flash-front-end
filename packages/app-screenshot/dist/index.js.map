{"version":3,"file":"index.js","sources":["../src/send-data-to-db.ts","../src/launch-playwright.ts","../src/index.tsx"],"sourcesContent":["const { PrismaClient } = require(\"@prisma/client\");\nconst prisma = new PrismaClient();\n\nconst sendDataToDB = async (\n  image: any,\n  page: { id: string; url: string },\n  browserType: string\n) => {\n  const screenshot = await prisma.screenshot.create({\n    data: {\n      image,\n      page: {\n        connect: { id: page.id },\n      },\n    },\n  });\n\n  return {\n    screenshot,\n  };\n};\n\nexport default sendDataToDB;\n","import sendDataToDB from \"./send-data-to-db\";\n\nconst playwright = require(\"playwright\");\n\nconst launchPlaywright = async (\n  browserType: string,\n  args: string[],\n  page: { id: string; url: string }\n) => {\n  const browser = await playwright[browserType].launch({ args });\n  const browserPage = await browser.newPage();\n\n  await browserPage.goto(page.url);\n\n  const buffer = await browserPage.screenshot();\n  const image = buffer.toString(\"base64\");\n\n  await sendDataToDB(image, page, browserType);\n\n  await browser.close();\n};\n\nexport default launchPlaywright;\n","import launchPlaywright from \"./launch-playwright\";\n\nconst { PrismaClient } = require(\"@prisma/client\");\nconst prisma = new PrismaClient();\n\nconst init = async (siteId: string) => {\n  try {\n    const site = await prisma.site.findOne({\n      where: {\n        id: siteId,\n      },\n      include: {\n        pages: true,\n      },\n    });\n\n    console.log(site);\n\n    site.pages.map(async (page: { id: string; url: string }) => {\n      await launchPlaywright(\"webkit\", [], page);\n      await launchPlaywright(\"firefox\", [], page);\n      await launchPlaywright(\"chromium\", [], page);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\ninit(\"8f4e8827-c627-4980-a6e8-b879e796e192\");\n"],"names":["require","PrismaClient","prisma","sendDataToDB","image","page","browserType","screenshot","create","data","connect","id","playwright","launchPlaywright","args","launch","browser","newPage","browserPage","url","buffer","toString","close","init","siteId","site","findOne","where","include","pages","console","log","map","error"],"mappings":"eAAyBA,OAAO,CAAC,gBAAD;IAAxBC,wBAAAA;;AACR,IAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf;;AAEA,IAAME,YAAY,YAAZA,YAAY,CAChBC,KADgB,EAEhBC,IAFgB,EAGhBC,WAHgB;AAAA;2BAKSJ,MAAM,CAACK,UAAP,CAAkBC,MAAlB,CAAyB;AAChDC,MAAAA,IAAI,EAAE;AACJL,QAAAA,KAAK,EAALA,KADI;AAEJC,QAAAA,IAAI,EAAE;AACJK,UAAAA,OAAO,EAAE;AAAEC,YAAAA,EAAE,EAAEN,IAAI,CAACM;AAAX;AADL;AAFF;AAD0C,KAAzB,kBAAnBJ;AASN,aAAO;AACLA,QAAAA,UAAU,EAAVA;AADK,OAAP;;AAGD,GAjBiB;AAAA;AAAA;AAAA,CAAlB;;ACDA,IAAMK,UAAU,GAAGZ,OAAO,CAAC,YAAD,CAA1B;;AAEA,IAAMa,gBAAgB,YAAhBA,gBAAgB,CACpBP,WADoB,EAEpBQ,IAFoB,EAGpBT,IAHoB;AAAA;2BAKEO,UAAU,CAACN,WAAD,CAAV,CAAwBS,MAAxB,CAA+B;AAAED,MAAAA,IAAI,EAAJA;AAAF,KAA/B,kBAAhBE;6BACoBA,OAAO,CAACC,OAAR,mBAApBC;+BAEAA,WAAW,QAAX,CAAiBb,IAAI,CAACc,GAAtB;iCAEeD,WAAW,CAACX,UAAZ,mBAAfa;AACN,gBAAMhB,KAAK,GAAGgB,MAAM,CAACC,QAAP,CAAgB,QAAhB,CAAd;mCAEMlB,YAAY,CAACC,KAAD,EAAQC,IAAR,EAAcC,WAAd;qCAEZU,OAAO,CAACM,KAAR;;;;;;AACP,GAhBqB;AAAA;AAAA;AAAA,CAAtB;;;;;;;;;;;;;;;;iBCFyBtB,OAAO,CAAC,gBAAD;IAAxBC,4BAAAA;;AACR,IAAMC,QAAM,GAAG,IAAID,cAAJ,EAAf;;AAEA,IAAMsB,IAAI,YAAJA,IAAI,CAAUC,MAAV;AAAA;oCACJ;AAAA,6BACiBtB,QAAM,CAACuB,IAAP,CAAYC,OAAZ,CAAoB;AACrCC,QAAAA,KAAK,EAAE;AACLhB,UAAAA,EAAE,EAAEa;AADC,SAD8B;AAIrCI,QAAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAE;AADA;AAJ4B,OAApB,CADjB,iBACIJ,IADJ;AAUFK,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEAA,QAAAA,IAAI,CAACI,KAAL,CAAWG,GAAX,WAAsB3B,IAAtB;AAAA;mCACQQ,gBAAgB,CAAC,QAAD,EAAW,EAAX,EAAeR,IAAf;qCAChBQ,gBAAgB,CAAC,SAAD,EAAY,EAAZ,EAAgBR,IAAhB;uCAChBQ,gBAAgB,CAAC,UAAD,EAAa,EAAb,EAAiBR,IAAjB;;;AACvB,WAJD;AAAA;AAAA;AAAA;AAZE;AAiBH,iBAAQ4B,OAAO;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;;;AACF,GArBS;AAAA;AAAA;AAAA,CAAV;;AAuBAV,IAAI,CAAC,sCAAD,CAAJ"}